// =======================================================
// 1. O que √© JavaScript e para que √© utilizado
// =======================================================

// JavaScript √© uma linguagem de programa√ß√£o interpretada e de tipagem din√¢mica, usada principalmente para dar interatividade a p√°ginas web.
// Hoje em dia, tamb√©m √© utilizado para:

// Frontend ‚Üí adicionar l√≥gica em p√°ginas web.
// Backend ‚Üí com Node.js.
// Aplica√ß√µes Mobile/Desktop ‚Üí frameworks como React Native, Electron.
// IoT e at√© Intelig√™ncia Artificial.

// JavaScript pode ser executado em dois ambientes principais:
// Navegadores Web: Cada navegador possui um motor JavaScript que interpreta e executa o c√≥digo. Exemplo: V8 (Chrome e Node.js), SpiderMonkey (Firefox). Esses motores possuem componentes que analisam, compilam e otimizam o c√≥digo.

// Servidores: Node.js √© uma plataforma que permite a execu√ß√£o de JavaScript no servidor. Ele utiliza o motor V8 para executar o c√≥digo JavaScript fora do navegador, permitindo a constru√ß√£o de aplica√ß√µes web completas.

// console.log("Ol√°, JavaScript! üöÄ");

// =======================================================
// 2. Vari√°veis
// =======================================================

// let nome = "Pedro";

// const anoNascimento = 2000;

// console.log("Nome:", nome);
// console.log("Ano de nascimento:", anoNascimento);

// =======================================================
// 3. Tipos primitivos
// =======================================================

// let texto = "JavaScript"; // String
// let numero = 42; // Number
// let estaLogado = true; // Boolean
// let valorNulo = null; // Null
// let indefinido; // Undefined

// console.log(typeof texto);
// console.log(typeof numero);
// console.log(typeof estaLogado);
// console.log(typeof valorNulo);
// console.log(typeof indefinido);

// =======================================================
// 4. Tipagem din√¢mica
// =======================================================

// let variavel = "Sou uma string";
// console.log(typeof variavel);

// variavel = 100; // agora √© n√∫mero
// console.log(typeof variavel);

// variavel = true; // agora √© booleano
// console.log(typeof variavel);

// =======================================================
// 5. Operadores de atribui√ß√£o
// =======================================================

let x = 10;
// x += 5;
// x = x + 5;
// console.log("x += 5 ‚Üí", x);

// x -= 2;
// x = x - 2;
// console.log("x -= 2 ‚Üí", x);

// x *= 3;
// console.log("x *= 3 ‚Üí", x);

// x /= 4;
// console.log("x /= 4 ‚Üí", x);

// =======================================================
// 6. Operadores aritm√©ticos
// =======================================================

// let a = 10;
// let b = 2;
// console.log("Soma:", a + b);
// console.log("Subtra√ß√£o:", a - b);
// console.log("Multiplica√ß√£o:", a * b);
// console.log("Divis√£o:", a / b);
// console.log("Resto:", a % b);
// console.log("Pot√™ncia:", a ** b);

// =======================================================
// 7. Operadores l√≥gicos
// =======================================================

// let maiorDeIdade = true;
// let temCarteira = true;

// console.log("maiorDeIdade && temCarteira:", maiorDeIdade && temCarteira);
// console.log("maiorDeIdade || temCarteira:", maiorDeIdade || temCarteira);
// console.log("!temCarteira:", !temCarteira);

// =======================================================
// 8. Estruturas condicionais
// =======================================================

// let idade = 18;

// IF / ELSE
let idade = 18;
// let idadeMaisVelho = "18";

// (==) n√£o faz verifica√ß√£o de tipo
// (===) faz verifica√ß√£o de tipo

// console.log(idade === idadeMaisVelho);

// if (idade > 18) {
//   console.log("Voc√™ √© maior de idade.");
// } else if (idade === 18) {
//   console.log("Voce acabou de fazer 18 anos");
// } else {
//   console.log("Voc√™ √© menor de idade.");
// }

// ELSE IF
// let nota = 75;

// if (nota >= 90) {
//   console.log("Conceito A");
// } else if (nota >= 70) {
//   console.log("Conceito B");
// } else {
//   console.log("Conceito C");
// }

// Operador tern√°rio
// let acesso = idade >= 18 ? "Permitido" : "Negado";
// console.log(acesso);

// ===============================
// SWITCH / CASE
// ===============================

// O switch/case √© usado para comparar um valor contra v√°rias possibilidades
// de forma mais organizada do que v√°rios if/else if encadeados.

let diaSemana = 3;

// switch (diaSemana) {
//   case 1:
//     console.log("Domingo");
//     break;
//   case 2:
//     console.log("Segunda-feira");
//     break;
//   case 3:
//     console.log("Ter√ßa-feira");
//     break;
//   case 4:
//     console.log("Quarta-feira");
//     break;
//   case 5:
//     console.log("Quinta-feira");
//     break;
//   case 6:
//     console.log("Sexta-feira");
//     break;
//   case 7:
//     console.log("S√°bado");
//     break;
//   default:
//     console.log("Dia inv√°lido");
//     break;
// }

// =======================================================
// 9. Estruturas de repeti√ß√£o
// =======================================================

// i++ (i = i + 1)

// for (let i = 1; i <= 5; i++) {
//   console.log("N√∫mero:", i);
// }

// let contador = 1;
let temCarteira = true;
let nome = false;

console.log((temCarteira && nome) || temCarteira);
// do {
//   console.log("teste");
//   //   contador++;
// } while (contador === 2);

// while (contador === 2) {
//   console.log("teste");
//   //   contador = contador + 1;
//   //   contador++;
// }
